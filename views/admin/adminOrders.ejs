<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin DashBoard</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src='https://kit.fontawesome.com/fc2e75786e.js' crossorigin='anonymous'></script>
    <link href="https://fonts.googleapis.com/css2?family=Sevillana&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css">

    <!-- <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.css"> -->
    <style>
        /* Inline styles for the background image */
        .box-brown {
            /* background-image: #e3c7b4; */
            background-image: linear-gradient(to right,#FFE0CA, #964820)
        }
        .box-dash{
            background-image: linear-gradient(#FFE0CA, #bc6438)

        }
        .text-brown {
            color: #250201; /* Brown color */
        }
         .sevillana-title {
            font-family: 'Sevillana', cursive;
            font-size: 2.5em;
            text-align: center;
            margin-top: 10px;
        }
        .box-foot
        {   
            background-color:#964820
        }
    </style>
</head>


<body>
    <%- include('adminHeader') %>
  
    <div class="flex justify-normal">
        <div class="flex justify-items-start">
            <%- include('adminSideBar') %>
        <br>
        </div>
     
        <div class="flex-grow  p-6 ">
          

            <% if (light.error) { %>
                <div class="text-center bg-red-500 text-white rounded mb-4"><%= light.error %></div>
            <% } %>
            <% if (light.success) { %>
                <div class="text-center bg-green-700 text-white rounded mb-4"><%= light.success %></div>
            <% } %> 


          
            
            <table id="ordersTable" class="m-10 p-5 align-items-center border border-red-900 rounded">
                <thead style="background-color: rgb(119, 45, 11); color: white;">
                    <tr>
                        <th>Order Id</th>
                        <th>Name</th>
                        <th>Payment</th>
                        <th>Order Status</th>
                        <th>Product Name</th>
                        <th>Product Order Status</th>
                        <th>Requests</th>
                        <th>Price</th>
                        <th>View</th>
                    </tr>
                </thead>
                <tbody>

                    <% for(const order of message) { %>
                        <tr>

    <td ><%= order.orderId %></td>
    <td ><%= order.address.customerName %></td>
    <td ><%= order.paymentMethod %></td>
    <td ><%= order.orderStatus %></td>


<td>
    <ul>
        <% for(let product of order.products){%>
            <li><%= product.productname %></li>
        <% } %>
    </ul>
</td>
<td>
    <ul>
        <% for(let product of order.products){%>
            <li>
                <form action="/admin/order/<%= order._id %>/toggle-block" method="POST">
                    <input type="hidden" name="productId" value="<%= product.productId._id %>">
                    <!-- <select name="productstatus" onchange="this.form.submit()" class="bg-white border border-red-900 rounded px-2 py-1">
                        <option value="Pending" <%= product.productstatus=== 'Pending' ? 'selected' : '' %> 
                            <%= product.productstatus === 'Delivered' || product.productstatus === 'Cancelled' || product.productstatus === 'Returned' ? 'disabled' : '' %>>Pending</option>
                        <option value="Confirmed" <%= product.productstatus === 'Confirmed' ? 'selected' : '' %> 
                            <%= product.productstatus === 'Delivered' || product.productstatus=== 'Cancelled' || product.productstatus === 'Returned' ? 'disabled' : '' %>>Confirmed</option>
                        <option value="Delivered" <%= product.productstatus === 'Delivered' ? 'selected' : '' %> 
                            <%= product.productstatus === 'Cancelled' || product.productstatus === 'Returned' ? 'disabled' : '' %>>Delivered</option>
                        <option value="Returned" <%= product.productstatus === 'Returned' ? 'selected' : '' %> 
                            <%= product.productstatus === 'Cancelled' ? 'disabled' : '' %>>Returned</option>
                        <option value="Cancelled" <%= product.productstatus === 'Cancelled' ? 'selected' : '' %> 
                            <%= product.productstatus === 'Delivered' ? 'disabled' : '' %>>Cancelled</option>
                        <option value="Shipped" <%= product.productstatus === 'Shipped' ? 'selected' : '' %> 
                            <%= product.productstatus === 'Cancelled' ? 'disabled' : '' %>>Shipped</option>
                    </select> -->
                    <select name="productstatus" onchange="this.form.submit()" class="bg-white border border-red-900 rounded px-2 py-1">

                        <option value="Pending" <%= product.productstatus === 'Pending' ? 'selected' : '' %> 
                            <%= product.productstatus === 'Cancelled' || product.productstatus === 'Returned' || product.productstatus === 'Confirmed'||product.productstatus === 'Shipped'||product.productstatus === 'Delivered' ? 'disabled' : '' %>>
                            Pending
                        </option>
                    
                    
                        <option value="Confirmed" <%= product.productstatus === 'Confirmed' ? 'selected' : '' %> 
                            <%= ['Cancelled', 'Returned','Shipped','Delivered'].includes(product.productstatus) ? 'disabled' : '' %>>
                            Confirmed
                        </option>
                    
                 
                        <option value="Delivered" <%= product.productstatus === 'Delivered' ? 'selected' : '' %> 
                            <%= ['Cancelled', 'Returned','Shipped'].includes(product.productstatus) ? 'disabled' : '' %>>
                            Delivered
                        </option>
                    
                    
                        <option value="Returned" <%= product.productstatus === 'Returned' ? 'selected' : '' %> 
                            <%= product.productstatus === 'Cancelled' ||product.productstatus === 'Shipped'? 'disabled' : '' %>>
                            Returned
                        </option>
                    
                     
                        <option value="Cancelled" <%= product.productstatus === 'Cancelled' ? 'selected' : '' %> 
                            <%= product.productstatus === 'Cancelled' || product.productstatus === 'Returned'? 'disabled' : '' %>>
                            Cancelled
                        </option>
                    
                 
                        <option value="Shipped" <%= product.productstatus === 'Shipped' ? 'selected' : '' %> 
                            <%= ['Cancelled', 'Returned'].includes(product.productstatus) ? 'disabled' : '' %>>
                            Shipped
                        </option>
                    </select>
                    
                </form>
            </li>
        <% } %>
    </ul>
</td>
<td>
    <ul>
        <% for(let product of order.products){%>
            <li><%= product.request%>-<%=product.returnProductReason %></li>
        <% } %>
    </ul>
</td>
<td>
    <ul>
        <% for(let product of order.products){%>
            <li><%= product.productprice %></li>
        <% } %>
    </ul>
</td>
<td>
     <button onclick="openModal(<%= JSON.stringify(order) %>)" class="bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600">View</button>
</td>



                        </tr>
                        
                      
                    <% } %> 
                </tbody>
            </table>
        </div>
        </div>
        
            
          
            <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
            <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
            
            <script>
                $(document).ready(function() {
                    $('#ordersTable').DataTable({
                        "paging": true,       
                        "ordering": true,      
                        "info": true,          
                        "searching": true,     
                        "autoWidth": false,    
                        "order": [[0, "desc"]], 
                        "columnDefs": [
                            { "orderable": false, "targets": [7, 8] } 
                        ]
                    });
                });
            </script>
            
                
                
            <div id="orderModal" class="fixed inset-0 bg-black bg-opacity-50 hidden justify-center items-center max-height-[250px] z-50">
                <div class="bg-white p-5 rounded-md w-1/2 ">
                    <div class="flex justify-between items-center">
                        <h3 class="text-xl font-semibold">Order Details</h3>
                        <button onclick="closeModal()" class="text-red-500 font-bold">&times;</button>
                    </div>
                    <hr>
                    <div id="modalContent" class="max-height-[200px]">
                        
                        <p class="text-sm"><b>Order ID:</b> <span id="modalOrderId"></span></p>
                        <p class="text-sm"><strong>Order Date:</strong> <span id="modalOrderDate"></span></p> 
                        <p class="text-sm"><strong>Customer Name:</strong> <span id="modalCustomerName"></span></p>
                        <p class="text-sm"><strong>Payment Method:</strong> <span id="modalPaymentMethod"></span></p>
                        <p class="text-sm"><strong>Total Price:</strong> Rs.<span id="modalTotalPrice"></span></p>
                        <p class="text-sm"><strong>Order Status:</strong> <span id="modalOrderStatus"></span></p>
                         <div id="modalProducts" class="max-h-96 overflow-y-auto"></div>
                        
                    </div>
                     <div class="mt-4"> 
                    
                        <button id="downloadButton" class="bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600">
                            Download
                        </button>
                    </div>
                </div>
            </div> 
            
        


</body>
</html>




<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

<script>




function openModal(orderData) {
       
       const modal = document.getElementById('orderModal');
       const modalOrderId = document.getElementById('modalOrderId');
       const modalOrderDate = document.getElementById('modalOrderDate');
       const modalProducts = document.getElementById('modalProducts');
       const modalCustomerName = document.getElementById('modalCustomerName');
       const modalPrice = document.getElementById('modalTotalPrice');
       const modalPayment = document.getElementById('modalPaymentMethod');
       const orderStatus=document.getElementById('modalOrderStatus');
      
       modalOrderId.innerText = orderData.orderId;
       modalOrderDate.innerText = new Date(orderData.createdAt).toLocaleDateString();
       modalCustomerName.innerText = orderData.customerId.name;
       modalPrice.innerText=orderData.totalPayablePrice;
       modalPayment.innerText=orderData.paymentMethod;
       modalOrderStatus.innerText=orderData.orderStatus;

   
       modalProducts.innerHTML = '';  
       orderData.products.forEach(product => {
 
   const productPrice = product.productprice;


   modalProducts.innerHTML += `
       <div class="product-details border-b py-2">
           <img src="${product.productimage}" alt="${product.productname}" width="50" height="50">
           <p class="text-sm"><strong>Product Name:</strong> ${product.productname}</p>
           <p class="text-sm"><strong>Quantity:</strong> ${product.productquantity}</p>
           <p class="text-sm"><strong>Price:</strong> $${productPrice}</p>
            <p class="text-sm"><strong>Product Status:</strong>${product.productstatus}</p>
       
       </div>
   `;
});


       // Show the modal
       modal.classList.remove('hidden');
       modal.classList.add('flex');
   }

   // Function to close the modal
   function closeModal() {
       const modal = document.getElementById('orderModal');
       modal.classList.add('hidden');
   }
</script>

<script>
    document.getElementById('downloadButton').addEventListener('click', async function () {
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF();
    
        // Fetching order details from modal
        const orderId = document.getElementById('modalOrderId').innerText;
        const orderDate = document.getElementById('modalOrderDate').innerText;
        const customerName = document.getElementById('modalCustomerName').innerText;
        const paymentMethod = document.getElementById('modalPaymentMethod').innerText;
        const totalPrice = document.getElementById('modalTotalPrice').innerText;
        const orderStatus=document.getElementById('modalOrderStatus').innerText;
    
        // Adding text content to the PDF
        doc.text(`Order ID: ${orderId}`, 10, 10);
        doc.text(`Order Date: ${orderDate}`, 10, 20);
        doc.text(`Customer Name: ${customerName}`, 10, 30);
        doc.text(`Payment Method: ${paymentMethod}`, 10, 40);
        doc.text(`Total Price: ${totalPrice}`, 10, 50);
        doc.text(`Order Status: ${orderStatus}`, 10, 60);
    
        // Fetch product details from modalProducts div
        const productElements = document.querySelectorAll('#modalProducts .product-details');
    
        let yOffset = 70; // Initial Y position for product details and images
        for (const productElement of productElements) {
            const productName = productElement.querySelector('p:nth-child(2)').innerText.split(": ")[1];
            const productQuantity = productElement.querySelector('p:nth-child(3)').innerText.split(": ")[1];
            const productPrice = productElement.querySelector('p:nth-child(4)').innerText.split("$")[1];
            const productImage = productElement.querySelector('img').src;
    
            // Add product details (name, price, quantity) to PDF
            doc.text(`Product Name: ${productName}`, 90, yOffset);
            doc.text(`Price: ${productPrice}`, 90, yOffset + 10);
            doc.text(`Quantity: ${productQuantity}`, 90, yOffset + 20);
    
            try {
                // Convert image URL to base64 and add to PDF
                const base64Img = await getBase64ImageFromURL(productImage);
                // Adding image to PDF at (x, y, width, height)
                doc.addImage(base64Img, 'JPEG', 10, yOffset, 50, 50); // Adjust x, y, width, height as needed
            } catch (error) {
                console.error('Error loading image', error);
            }
    
            yOffset += 60; // Adjust Y position for next product (adjust height as per your content)
        }
    
        // Save the generated PDF
        doc.save('adminorder-details.pdf');
    });
    
    // Function to convert image URL to base64
    async function getBase64ImageFromURL(url) {
        const response = await fetch(url);
        const blob = await response.blob();
    
        return new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.onloadend = () => resolve(reader.result);
            reader.onerror = reject;
            reader.readAsDataURL(blob);
        });
    }
    
    function closeModal() {
        document.getElementById('orderModal').classList.add('hidden');
    }
    
 
    
   
    </script>
  