<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pelle Eterno</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src='https://kit.fontawesome.com/fc2e75786e.js' crossorigin='anonymous'></script>
    <link href="https://fonts.googleapis.com/css2?family=Sevillana&display=swap" rel="stylesheet">
    <style>
        /* Inline styles for the background image */
        .box-brown {
            /* background-image: #e3c7b4; */
            background-image: linear-gradient(to right,#FFE0CA, #964820)
        }
        .box-dash{
            background-image: linear-gradient(#FFE0CA, #bc6438)

        }
        .text-brown {
            color: #250201; /* Brown color */
        }
         .sevillana-title {
            font-family: 'Sevillana', cursive;
            font-size: 2.5em;
            text-align: center;
            margin-top: 10px;
        }
        .box-foot
        {   
            background-color:#964820
        }
    </style>
</head>

<body>
     
    <div class="bg-black text-black h-3 w-full"></div>
    <div class=" box-brown  m-0  ">
      <header class="flex justify-around w-full">
        <div class="relative mb-2 sevillana-title text-center text-brown text-opacity-100">Pelle Eterno</div>
        <div>
        <img src="https://res.cloudinary.com/dihyb66hn/image/upload/v1725854174/products/caehmjvrf6qftxa9la9f.jpg" alt="logo" class=" h-20 w-20 ml-auto "></div>
      </header>
    </div>
    
    <%- include('userBreadCrumbProfile') %>
 
    <div class="flex justify-normal"></div>
        <div class="flex justify-items-start">
            <%- include('userSideBar') %>
        <br>
        </div>

        <div class="bg-red-50 p-6 w-full shadow-md rounded-md my-5 max-w-2xl mx-auto">
         
            <div class="flex justify-center">
              <button id="passwordchange" class="text-center text-xl py-5 text-red-900"><b>Change your Password</b> <i class="fa-solid fa-pen-to-square"></i></button>
            </div>

            <form id="passwordForm" class="p-8 bg-red-50 rounded-lg ">
            
                <div class="mb-4">
            <label for="currentPassword" class="block text-sm font-medium text-gray-700">Current Password</label>
            <input type="password" id="currentPassword" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md" placeholder="Enter current password">
            <span id="currentPasswordError" class="text-red-500 text-sm"></span>
          </div>
        
          <div class="mb-4">
            <label for="newPassword" class="block text-sm font-medium text-gray-700">New Password</label>
            <input type="password" id="newPassword" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md" placeholder="Enter new password">
            <span id="newPasswordError" class="text-red-500 text-sm"></span>
          </div>
        
          <div class="mb-4">
            <label for="confirmPassword" class="block text-sm font-medium text-gray-700">Confirm New Password</label>
            <input type="password" id="confirmPassword" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md" placeholder="Confirm new password">
            <span id="confirmPasswordError" class="text-red-500 text-sm"></span>
          </div>
        
              <button type="submit" class="w-full py-2 px-4 my-2 text-white bg-red-900 hover:bg-red-700">Submit</button>
            </form>
           
            </div>
      
    </div>
    <div id="successModal" class="hidden fixed inset-0 flex items-center justify-center text-center bg-gray-800 bg-opacity-50">
        <div class="bg-white rounded-lg p-6">
          <h2 class="text-lg font-bold mb-4">Success</h2>
          <p id="successMessage" class="mb-4"></p>
          <button id="closeModal" class="bg-indigo-600 text-white px-4 py-2 rounded ">Close</button>
        </div>
      </div>
    <%- include('userFooter') %>


    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        
  document.getElementById('passwordchange').addEventListener('click', function() {
    const passwordForm = document.getElementById('passwordForm');
    // passwordForm.classList.toggle('hidden'); // Toggle hidden class
  });

  document.getElementById('passwordForm').addEventListener('submit', async function(e) {
  e.preventDefault();

  
  document.getElementById('currentPasswordError').textContent = '';
  document.getElementById('newPasswordError').textContent = '';
  document.getElementById('confirmPasswordError').textContent = '';
  

  
  const currentPassword = document.getElementById('currentPassword').value;
  const newPassword = document.getElementById('newPassword').value;
  const confirmPassword = document.getElementById('confirmPassword').value;

  let isValid = true;

             const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[*#@%])[A-Za-z\d*#@%]{8,15}$/;

              if(currentPassword==='' || currentPassword == null || currentPassword === "password"){
                document.getElementById('currentPasswordError').textContent = 'Enter a valid password';
                isValid = false;
              }else if (!newPassword) {
                document.getElementById('newPasswordError').textContent = 'Password cannot be empty. Please enter a valid password.';
               isValid = false;
               } else if (newPassword.toLowerCase() === 'password') {
                document.getElementById('newPasswordError').textContent = 'Password cannot be "password". Please choose a more secure password.';
               isValid = false;
                 } else if (newPassword.length < 8 || newPassword.length > 15) {
                  document.getElementById('newPasswordError').textContent = 'Password must be between 8 and 15 characters long.';
               isValid = false;
               } else if (!passwordPattern.test(newPassword)) {
                document.getElementById('newPasswordError').textContent = 'Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character (*, #, @, %).'
               isValid = false;
               }  else if(newPassword !== confirmPassword){
                document.getElementById('confirmPasswordError').textContent = 'Passwords do not match';
                isValid = false;
               }else{
                document.getElementById('newPasswordError').textContent = '';
               }
               
  if (!isValid) {
    return; 
  }


  try {
    const response = await axios.post('/user/profile/changepassword', {
      currentPassword,
      newPassword,
      confirmPassword
    })

    if (response.data.success){
      document.getElementById('currentPassword').textContent = '';
      document.getElementById('newPassword').textContent = '';
      document.getElementById('confirmPassword').textContent = '';
      console.log("success")
      document.getElementById('successMessage').textContent = 'Password updated successfully!';
      document.getElementById('successModal').classList.remove('hidden');
    //   window.location.reload()

  
    }

  } catch (error) {
    console.error('Error updating password:', error);
    document.getElementById('currentPasswordError').textContent = 'Current Password is incorrect';

  }
});
    </script>
</body>
</html>

